# Step charts

Step charts are **a method of showing progress** toward something. They combine showing change over time -- **cumulative change over time** -- with magnitude. They're good at inviting comparison.

There's great examples out there. First is the Washington Post looking at [Lebron passing Jordan's career point total](https://www.washingtonpost.com/graphics/sports/lebron-james-michael-jordan-nba-scoring-list/?utm_term=.481074150849). Another is John Burn-Murdoch's work at the Financial Times (which is paywalled) about soccer stars. [Here's an example of his work outside the paywall](http://johnburnmurdoch.github.io/projects/goal-lines/CL/).

To replicate this, we need cumulative data -- data that is the running total of data at a given point. So think of it this way -- Maryland scores 50 points in a basketball game and then 50 more the next, their cumulative total at two games is 100 points.

Step charts can be used for all kinds of things -- showing how a player's career has evolved over time, how a team fares over a season, or franchise history. Let's walk through an example.

Let's look at Maryland's women basketball team last season.

```{r echo=FALSE, class.output="bg-info", results="asis",  message=FALSE,  warning=FALSE}
library(downloadthis)
library(glue)

dllink <- download_link(
  link = "https://dwillis.github.io/sports-data-files/wbb_game_logs_2022.csv",
  button_label = "Download csv file",
  button_type = "danger",
  has_icon = TRUE,
  icon = "fa fa-save",
  self_contained = FALSE
)

glue("<pre><p><strong>For this walkthrough:</strong></p><p>{dllink}</p></pre>")

```

We'll need the tidyverse.

```{r, message=FALSE,  warning=FALSE}
library(tidyverse)
```

And we need to load our logs data we just downloaded.

```{r}
logs <- read_csv("data/wbb_game_logs_2022.csv")
```

Here we're going to look at the scoring differential of teams. If you score more than your opponent, you win. So it stands to reason that if you score a lot more than your opponent over the course of a season, you should be very good, right? Let's see.

The first thing we're going to do is calculate that differential. Then, we'll group it by the team. After that, we're going to summarize using a new function called `cumsum` or cumulative sum -- the sum for each game as we go forward. So game 1's cumsum is the differential of that game. Game 2's cumsum is Game 1 + Game 2. Game 3 is Game 1 + 2 + 3 and so on.

```{r}
difflogs <- logs %>% 
  mutate(Differential = pts - opp_pts) %>% 
  group_by(team) %>% 
  mutate(CumDiff = cumsum(Differential))
```

Now that we have the cumulative sum for each, let's filter it down to just Big Ten teams.

```{r}
bigdiff <- difflogs %>% filter(conference == "Big Ten")
```

The step chart is it's own geom, so we can employ it just like we have the others. It works almost exactly the same as a line chart, but it uses the cumulative sum instead of a regular value and, as the name implies, creates a step like shape to the line instead of a curve.

```{r}
ggplot() + geom_step(data=bigdiff, aes(x=date, y=CumDiff, group=team))
```

Let's try a different element of the aesthetic: color, but this time inside the aesthetic. Last time, we did the color outside. When you put it inside, you pass it a column name and ggplot will color each line based on what thing that is, and it will create a legend that labels each line that thing.

```{r}
ggplot() + geom_step(data=bigdiff, aes(x=date, y=CumDiff, group=team, color=team))
```

From this, we can see a handful of teams in the Big Ten had negative point differentials last season. But which is which? And which one is Maryland? Too many colors and it's too hard to tell. How to sort that out? Let's add some helpers beyond layering.

Let's look at Maryland, plus another team: Purdue.

```{r}
umd <- bigdiff %>% filter(team == "Maryland")
pu <- bigdiff %>% filter(team == "Purdue")
```

Let's introduce a couple of new things here. First, note when I take the color OUT of the aesthetic, the legend disappears.

The second thing I'm going to add is the annotation layer. In this case, I am adding a text annotation layer, and I can specify where by adding in a x and a y value where I want to put it. This takes some finesse. After that, I'm going to add labels and a theme.

```{r}
ggplot() + 
  geom_step(data=bigdiff, aes(x=date, y=CumDiff, group=team), color="light grey") +
  geom_step(data=umd, aes(x=date, y=CumDiff, group=team), color="red") + 
  geom_step(data=pu, aes(x=date, y=CumDiff, group=team), color="gold") +
  annotate("text", x=(as.Date("2021-11-10")), y=70, label="Purdue") +
  annotate("text", x=(as.Date("2022-02-01")), y=330, label="Maryland") +
  labs(
    x="Date", 
    y="Cumulative Point Differential", 
    title="Ups and Downs for Maryland, Purdue Steadier", 
    subtitle="The Terps had some big swings in point differential in an inconsistent season.", 
    caption="Source: Sports-Reference.com | By Derek Willis") +
  theme_minimal()
```
